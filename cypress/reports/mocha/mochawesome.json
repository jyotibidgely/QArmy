{
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-12T11:24:59.501Z",
    "end": "2022-08-12T11:26:19.566Z",
    "duration": 80065,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cfd403e1-387e-4030-b904-1a23f15924d9",
      "title": "",
      "fullFile": "cypress/e2e/Ameren/GbDownload/GbDownloadAMIE.cy.js",
      "file": "cypress/e2e/Ameren/GbDownload/GbDownloadAMIE.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2707d4f7-b878-406e-b031-f2968f79740e",
          "title": "GB download - AMI Electric",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Invoice data API response",
              "fullTitle": "GB download - AMI Electric Invoice data API response",
              "timedOut": null,
              "duration": 8721,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('Hash - ' + userHash);\ncy.visit(pilotData.url + \"dashboard?user-hash=\" + userHash);\ncy.log(bearerToken);\nobjApiResponse.invoiceDataResponse(uuid, strMeasurementType, bearerToken).then(res => {\n  cy.log(res);\n  objLength = Object.keys(res).length;\n  var firstKey = Object.keys(res)[objLength - 1];\n  let objData = res[firstKey];\n  cy.log(objData);\n  var objFirst = Object.keys(res)[0];\n  var firstObjData = res[objFirst];\n  var firstBillingStartTs = firstObjData['billingStartTs'];\n  var firstStartTs = new Date(firstBillingStartTs * 1000);\n  strMinDate = objGenericPage.changDateFormat(firstStartTs.toDateString());\n  billingEndTs = objData['billingEndTs'];\n  billingStartTs = objData['billingStartTs'];\n  cy.log(billingStartTs);\n  cy.log(billingEndTs);\n  var startTs = new Date(billingStartTs * 1000); // The 0 there is the key, which sets the date to the epoch\n  // d.setUTCSeconds(billingEndTs);\n  var endTs = new Date(billingEndTs * 1000);\n  endTs.setDate(endTs.getDate() - 1);\n  cy.log(startTs.toLocaleString());\n  cy.log(endTs.toDateString());\n  strStartDate = objGenericPage.changDateFormat(startTs.toDateString());\n  strEndDate = objGenericPage.changDateFormat(endTs.toDateString());\n  cy.log('Start date - ' + strStartDate);\n  cy.wrap(strStartDate).as('strStartDate');\n  var newStartTs = new Date(billingEndTs * 1000);\n  newStartTs.setDate(newStartTs.getDate() - 30);\n  strNewStartDate = objGenericPage.changDateFormat(newStartTs.toDateString());\n  newEpochStartTs = newStartTs.getTime() / 1000;\n  var newEndTs = new Date(billingEndTs * 1000);\n  newEndTs.setDate(newEndTs.getDate() - 29);\n  strNewEndDate = objGenericPage.changDateFormat(newEndTs.toDateString());\n  newEpochEndTs = newEndTs.getTime() / 1000;\n});",
              "err": {},
              "uuid": "e348aeca-b3da-4394-9519-9157d88875e0",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Navigate to Download my data",
              "fullTitle": "GB download - AMI Electric Navigate to Download my data",
              "timedOut": null,
              "duration": 5989,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "objGenericPage.checkHeader();\ncy.wait(1000);\nobjGenericPage.clickDownloadMyData();\ncy.wait(1000);",
              "err": {},
              "uuid": "86bc7361-3f05-4f27-938e-2b1f996dab80",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export data - Bill period",
              "fullTitle": "GB download - AMI Electric Export data - Bill period",
              "timedOut": null,
              "duration": 5363,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var billPeriodStartDate = objGenericPage.changDateFormatString(strStartDate);\nvar billPeriodEndDate = objGenericPage.changDateFormatString(strEndDate);\nvar strBillPeriodDate = billPeriodStartDate + ' - ' + billPeriodEndDate;\ncy.log(strBillPeriodDate);\nobjGbDownload.verifyPageTitle();\nobjGbDownload.verifySubtitle();\nobjGbDownload.verifyExportBillLabel();\nobjGbDownload.verifyExportDaysLabel();\nobjGbDownload.verifyDataMsg();\nobjGbDownload.selectDropdownElement(strBillPeriodDate, objLength);\ncy.get(objGbDownload.exportBtn).should('have.css', 'background-color').and('eq', 'rgb(27, 108, 181)');\ncy.get(objGbDownload.exportBtn).should('have.css', 'cursor').and('eq', 'pointer');\ncy.get('.download-page-btn').contains('Cancel').should('have.css', 'background-color').and('eq', 'rgba(0, 0, 0, 0)');\ncy.get('.download-page-btn').contains('Cancel').should('have.css', 'cursor').and('eq', 'pointer');\nobjGbDownload.clickExport();\nobjGbDownload.checkSuccessMsg('GreenButton data downloaded successfully.');",
              "err": {},
              "uuid": "2a98507d-235d-468e-8f26-b67e43553c42",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export data - Calendar Days",
              "fullTitle": "GB download - AMI Electric Export data - Calendar Days",
              "timedOut": null,
              "duration": 19087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Export usage for range of days').click();\ncy.wait(200);\ncy.get(objGbDownload.calendarIcon).eq(0).should('be.visible');\ncy.get(objGbDownload.calendarIcon).eq(1).should('be.visible');\ncy.get(objGbDownload.calendarIcon).eq(0).click();\ncy.get('[aria-label=\"Go to the previous month\"]').click();\ncy.get('[role=\"presentation\"]').eq(10).click();\ncy.get(objGbDownload.calendarIcon).eq(1).click();\ncy.get('[aria-label=\"Go to the previous month\"]').click();\ncy.get('[role=\"presentation\"]').eq(11).click();\nobjGbDownload.clickExport();\nobjGbDownload.checkSuccessMsg('GreenButton data downloaded successfully.');\ncy.wait(500); //Min and max dates\nobjGbDownload.enterFromDate(strMinDate);\nobjGbDownload.enterToDate(strEndDate);\nobjGbDownload.clickExport();\nobjGbDownload.checkSuccessMsg('Please select a date range that does not exceed one year.'); //Same date\nobjGbDownload.enterFromDate(strStartDate);\nobjGbDownload.enterToDate(strStartDate);\nobjGbDownload.clickExport();\nobjGbDownload.checkSuccessMsg('GreenButton data downloaded successfully.');",
              "err": {},
              "uuid": "c270921d-2b03-4285-8ef3-55f60020849d",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export data - Days",
              "fullTitle": "GB download - AMI Electric Export data - Days",
              "timedOut": null,
              "duration": 6014,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deleteDownloadsFolder();\ncy.log('Start date - ' + strStartDate);\ncy.contains('Export usage for range of days').click();\nobjGbDownload.enterFromDate('16/09/20');\nobjGbDownload.checkErrorMsg('Invalid Date Format');\nobjGbDownload.enterFromDate('03/02/2003');\nobjGbDownload.checkErrorMsg('Date should not be before minimal date'); // objGbDownload.enterFromDate('08/05/2032')\n// objGbDownload.checkErrorMsg('Date should not be after maximal date')\nobjGbDownload.enterFromDate(strNewStartDate);\nobjGbDownload.enterToDate('56/09/2022');\nobjGbDownload.checkErrorMsg('Invalid Date Format');\nobjGbDownload.enterToDate('08/05/2032');\nobjGbDownload.checkErrorMsg('Date should not be after maximal date'); // objGbDownload.enterToDate('03/02/2003')\n// objGbDownload.checkErrorMsg('Date should not be before minimal date')\nobjGbDownload.enterToDate(strNewEndDate);\nobjGbDownload.clickExport();\nobjGbDownload.checkSuccessMsg('GreenButton data downloaded successfully.');\ncy.wait(500);\ncy.get(objGbDownload.calendarIcon).eq(0).should('be.visible');\ncy.get(objGbDownload.calendarIcon).eq(1).should('be.visible');",
              "err": {},
              "uuid": "d0e24205-ceee-4f98-ad3b-f1cc6f7881ab",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check Disabled fields",
              "fullTitle": "GB download - AMI Electric Check Disabled fields",
              "timedOut": null,
              "duration": 2283,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Export usage for range of bill period').click();\ncy.wait(500);\ncy.get(objGbDownload.fromDate).should('be.disabled');\ncy.get(objGbDownload.toDate).should('be.disabled');\ncy.get(objGbDownload.calendarIcon).parent().parent().should('be.disabled');\ncy.contains('Export usage for range of days').click();\ncy.wait(500);\ncy.get(objGbDownload.dropdownEle).should('have.attr', 'aria-disabled', 'true');",
              "err": {},
              "uuid": "70033d12-c8a8-4016-928c-056999a075e4",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancel button",
              "fullTitle": "GB download - AMI Electric Cancel button",
              "timedOut": null,
              "duration": 2367,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "objGbDownload.clickCancelBtn();\ncy.wait(500);\ncy.get('.home-page-main', {\n  timeout: 10000\n}).should('be.visible');",
              "err": {},
              "uuid": "33a38602-2d7a-4db6-9325-9b60b9a71918",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch values from RAW data",
              "fullTitle": "GB download - AMI Electric Fetch values from RAW data",
              "timedOut": null,
              "duration": 939,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "objApiResponse.gbJsonResponse(uuid, gatewayId, newEpochStartTs, newEpochEndTs, bearerToken).then(res => {\n  cy.log(res);\n  var firstKey = Object.keys(res)[0];\n  let objData = res[firstKey];\n  cy.log(objData); // let billingEndTs = objData['billingEndTs']\n  for (let index = 0; index < res.length - 1; index++) {\n    const element = res[index];\n    console.log(element);\n    const time = element['time'];\n    var value = element['value'];\n    const duration = element['duration'];\n    value = Math.round(value);\n    cy.log(value);\n    strObj = strObj + '<espi:IntervalReading><espi:ReadingQuality><espi:quality>17</espi:quality></espi:ReadingQuality><espi:timePeriod><espi:duration>' + duration + '</espi:duration><espi:start>' + time + '</espi:start></espi:timePeriod><espi:value>' + value + '</espi:value></espi:IntervalReading>';\n  }\n});",
              "err": {},
              "uuid": "89b2ea33-f39f-416c-9c49-142e72c80b02",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Fetch values from Meter API",
              "fullTitle": "GB download - AMI Electric Fetch values from Meter API",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "objApiResponse.meterApiResponse(uuid, gatewayId, bearerToken).then(res => {\n  cy.log(res);\n  var strMeterObj = '/users/' + uuid + '/homes/1/gws/' + gatewayId + '/meters/1';\n  var meterObj = res[strMeterObj];\n  meterToken = meterObj.token;\n  cy.log(meterToken);\n});",
              "err": {},
              "uuid": "c0aff2bf-2379-4397-be91-5f2a84f32e79",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read download file",
              "fullTitle": "GB download - AMI Electric Read download file",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task('downloads', 'cypress/downloads').then(after => {\n  console.log(after);\n  console.log(strObj);\n  cy.readFile(\"cypress/downloads/\" + after).then(fileToRead => {\n    cy.wrap(fileToRead).should('contain', 'Green Button Data File. Meter: ' + meterToken);\n    cy.wrap(fileToRead).should('contain', '<espi:ReadingType><espi:accumulationBehaviour>4</espi:accumulationBehaviour><espi:commodity>1</espi:commodity><espi:dataQualifier>12</espi:dataQualifier><espi:defaultQuality>17</espi:defaultQuality><espi:flowDirection>1</espi:flowDirection><espi:intervalLength>3600</espi:intervalLength><espi:kind>12</espi:kind><espi:phase>769</espi:phase><espi:powerOfTenMultiplier>0</espi:powerOfTenMultiplier><espi:timeAttribute>0</espi:timeAttribute><espi:uom>72</espi:uom></espi:ReadingType>');\n    cy.wrap(fileToRead).should('contain', strObj);\n  }); //   expect(after.length).to.be.eq(before.length +1)  \n});",
              "err": {},
              "uuid": "5073bdf9-fb0d-4c68-a490-7da772026bcd",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upload data - DMD Validator",
              "fullTitle": "GB download - AMI Electric Upload data - DMD Validator",
              "timedOut": null,
              "duration": 6209,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://dmdvalidator.greenbuttonalliance.org/\");\ncy.get('#FBSelection', {\n  timeout: 10000\n}).should('be.visible');\ncy.get('select').select('Energy Usage file: Electricity Interval Metering');\ncy.wait(200);\ncy.get('#FB_15').uncheck({\n  force: true\n});\ncy.wait(500);\ncy.task('downloads', 'cypress/downloads').then(p => {\n  //file to be uploaded path in project folder\n  const fileToUpload = \"../downloads/\" + p;\n  cy.log(fileToUpload); //upload file with attachFile\n  cy.get('#dropZone').attachFile(fileToUpload, {\n    subjectType: 'drag-n-drop'\n  });\n  cy.get('thead > tr > td', {\n    timeout: 15000\n  }).should('have.text', ' ...all tests were successful. ...all tests were successful. ...all tests were successful.');\n  cy.get('.text-danger').should('not.exist');\n});",
              "err": {},
              "uuid": "8f81e58b-6227-4d9e-b4e0-70dde6a0be7b",
              "parentUUID": "2707d4f7-b878-406e-b031-f2968f79740e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e348aeca-b3da-4394-9519-9157d88875e0",
            "86bc7361-3f05-4f27-938e-2b1f996dab80",
            "2a98507d-235d-468e-8f26-b67e43553c42",
            "c270921d-2b03-4285-8ef3-55f60020849d",
            "d0e24205-ceee-4f98-ad3b-f1cc6f7881ab",
            "70033d12-c8a8-4016-928c-056999a075e4",
            "33a38602-2d7a-4db6-9325-9b60b9a71918",
            "89b2ea33-f39f-416c-9c49-142e72c80b02",
            "c0aff2bf-2379-4397-be91-5f2a84f32e79",
            "5073bdf9-fb0d-4c68-a490-7da772026bcd",
            "8f81e58b-6227-4d9e-b4e0-70dde6a0be7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57564,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}